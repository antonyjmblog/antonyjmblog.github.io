{"componentChunkName":"component---src-templates-blog-post-js","path":"/udemy_cont/","result":{"data":{"site":{"siteMetadata":{"title":"Antony's Blog"}},"markdownRemark":{"id":"bd5ab071-f8f9-5aeb-b29d-316b3508b32a","excerpt":"Free Udemy courses, Next Level In my last post I told you about how I managed to pull out udemy course URLs, but still clicking from a text file can be pretty‚Ä¶","html":"<h2>Free Udemy courses, Next Level</h2>\n<p>In my last post I told you about how I managed to pull out udemy course URLs, but still clicking from a text file can be pretty tough if it contains ~500 links per day, then What to do ü§î <br>\nüëâ HTML and mouse automation</p>\n<blockquote>\n<p>Get ready for the Magic</p>\n</blockquote>\n<p>You may be wondering why didn‚Äôt I use web-drivers and selenium for automation, trust me I did but the results where absolutely worthless, I spend hours on selenium and google web-driver but the links always opens in a sand box hence, udemy detects it and logouts you and its protected by a capta\nHere is where the good old mouse automation helps us.but how to make links click able üôã <br>\nüëâ make a html out of it.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/home/antony/Code/Telegram/urls.html\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> \n    <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;html>&lt;head>&lt;/head>&lt;body>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> url <span class=\"token keyword\">in</span> udemy_url<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">not</span><span class=\"token punctuation\">(</span>url <span class=\"token keyword\">in</span> lines<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n                <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'&lt;a href=\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>url<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>url<span class=\"token punctuation\">}</span></span><span class=\"token string\"> &lt;/a> &lt;br>'</span></span><span class=\"token punctuation\">)</span> \n            <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">pass</span>\n    <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;/body>&lt;/html>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> </code></pre></div>\n<p>this is the exact code I used.üëç <br></p>\n<blockquote>\n<p>after that it all ‚Äúpyautogui‚Äù\nthese are packages required to start</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pyautogui \n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> time</code></pre></div>\n<p>get all important screen points by using:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pyautogui<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pyautogui<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>then point the mouse to the first URL increment step size (step = 17), then the process gets tricky when the last URL in the screen is reached hence we use the scroll function to scroll to the next block of URLs.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        pyautogui<span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span>x_scroll<span class=\"token punctuation\">,</span> y_scroll<span class=\"token punctuation\">)</span></code></pre></div>\n<p>after you click a URL using <code class=\"language-text\">pyautogui.click(x_inital, y_inital)</code> then find the enroll button in the screen od udemy hence we can do something like this <code class=\"language-text\">pyautogui.click(x_enroll, y_enroll)</code> don‚Äôt forget to <code class=\"language-text\">time.sleep(10)</code> as it takes time to load the website or a click will be wasted.</p>\n<p>there you have it, all udemy URL in HTML and auto mouse clicking.</p>\n<p>If you want to go a little further incorporate a mouse click task using python threading so that you don‚Äôt need to change screen timeout and don‚Äôt need to type in passwords on timeout.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">x <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>fake_mouse<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nx<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"Free Udemy courses, Next Level","date":"May 31, 2020","description":"Take udemy courses automation to the next level"}}},"pageContext":{"slug":"/udemy_cont/","previous":{"fields":{"slug":"/udemy/"},"frontmatter":{"title":"Free Udemy courses, no Hoax"}},"next":{"fields":{"slug":"/cron/"},"frontmatter":{"title":"Let Cron do the Job."}}}}}