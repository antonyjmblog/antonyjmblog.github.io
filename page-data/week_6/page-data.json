{"componentChunkName":"component---src-templates-blog-post-js","path":"/week_6/","result":{"data":{"site":{"siteMetadata":{"title":"Antony's Blog"}},"markdownRemark":{"id":"1c09dd7f-a596-5e00-a7cf-1824b373501c","excerpt":"Snake Game with p5js \nHai,Everyone 👋 ,\nI have done Snake game as my 1st python microproject during the 1st semester of college, so I challenged myself how much…","html":"<h2>Snake Game with p5js</h2>\n<p><code class=\"language-text\">6th week of blogging</code><br>\nHai,Everyone 👋 ,<br>\nI have done Snake game as my 1st python microproject during the 1st semester of college, so I challenged myself how much did you grow after 3 years, by making the same game in p5js and Angular.<br>\nSo I thought how about some OOP in case of the snake.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Snake</span><span class=\"token punctuation\">{</span>\n\t x<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t y<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t xspeed<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t yspeed<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t pix<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n\t s<span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n\t size<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n\t total<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t tail<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t \n\t <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pix<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span>size<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pix <span class=\"token operator\">=</span> pix<span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> size<span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\t \n\t <span class=\"token function-variable function\">update</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">currPos</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>total <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>total<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\t <span class=\"token punctuation\">}</span>\n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>total <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> currPos<span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xspeed <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pix<span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>yspeed <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pix<span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\t \n\t <span class=\"token function-variable function\">constrain</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span>y</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\t \n\t <span class=\"token function-variable function\">dir</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span>y</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xspeed <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>yspeed <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\t \n\t <span class=\"token function-variable function\">eat</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>total<span class=\"token operator\">+=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\t <span class=\"token punctuation\">}</span>\n\t \n\t <span class=\"token function-variable function\">death</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>total <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tail <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t \n\t<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> Snake <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>First, start by dividing the Canvas into rows and columns, I called this Pix, it will act as the size of the snake too.<br>\nso the size and pix are initialized,<br>\nthe snake has different functions:<br></p>\n<h5>Update</h5>\n<p>This function takes care of the snake position, in the canvas. It stores the tail of the snake in an array, and whenever a snake eats a fruit it updates array with currentPos of snake and shifts all positions to the right so the snake is shown as moving.</p>\n<h5>Constrains</h5>\n<p>It constrains the snakes x,y so that I won’t go out of the canvas.</p>\n<h5>Direction</h5>\n<p>This specifies the direction in which the snake moves, it’s done by setting the xspeed and yspeed.</p>\n<h5>Eat</h5>\n<p>To know that snake has eaten the fruit, which can be calculated by finding distance between snakehead the fruit.</p>\n<h5>Death</h5>\n<p>Which is triggered when a snake dies and takes care of the reinitialization of the snake for the new game.<br>\nthen we export the snake to use in Componets.ts in Angular, We import as import { Snake } from “./snake”;<br><br>\nWhen the game starts a new snake is initialized and a new location for the fruit is picked by a random function.<br>\nDraw function draws the snake at every instant. when Keys are pressed the snake directions are changed by setting the xspeed and yspeed</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getScreenSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\t \n\t @<span class=\"token function\">HostListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'window:resize'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'$event'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t <span class=\"token function\">getScreenSize</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token operator\">?</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>screenHeight <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerHeight<span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>screenWidth <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerWidth<span class=\"token punctuation\">;</span>\n\t console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>screenHeight<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>screenWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\t \n\t <span class=\"token function\">getRandomInt</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">max</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\t \n\t <span class=\"token function\">scoreUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">score</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>score <span class=\"token operator\">=</span> score<span class=\"token punctuation\">;</span>\n\t console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\t \n\t <span class=\"token function\">gameOver</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">game_over</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game_over <span class=\"token operator\">=</span> game_over<span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game_over<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"restart\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game_over <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\t console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game_over<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\t \n\t <span class=\"token function\">ngOnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t \n\t <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sketch</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">s</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">let</span> size <span class=\"token operator\">=</span> <span class=\"token number\">500</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">let</span> pix <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">let</span> col<span class=\"token punctuation\">,</span>row<span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">let</span> snake<span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">let</span> x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">let</span> food<span class=\"token punctuation\">;</span>\n\t \n\t s<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">preload</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t \n\t <span class=\"token punctuation\">}</span>\n\t \n\t s<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setup</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t s<span class=\"token punctuation\">.</span><span class=\"token function\">createCanvas</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">parent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sketch-holder'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t s<span class=\"token punctuation\">.</span><span class=\"token function\">frameRate</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t col <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>size <span class=\"token operator\">/</span> pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t row <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>size <span class=\"token operator\">/</span> pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>col<span class=\"token punctuation\">,</span>row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t snake <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Snake</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token function\">pickLoc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\t \n\t <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">pickLoc</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t food <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">createVector</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRandomInt</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRandomInt</span><span class=\"token punctuation\">(</span>col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t food<span class=\"token punctuation\">.</span><span class=\"token function\">mult</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\t \n\t <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">death</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> snake<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">let</span> pos <span class=\"token operator\">=</span> snake<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">let</span> d <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">dist</span><span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>snake<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>pos<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>pos<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"death\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t snake<span class=\"token punctuation\">.</span><span class=\"token function\">death</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">gameOver</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\t <span class=\"token punctuation\">}</span>\n\t <span class=\"token punctuation\">}</span>\n\t \n\t s<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">draw</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">scoreUpdate</span><span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t s<span class=\"token punctuation\">.</span><span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token number\">51</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token function\">death</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game_over<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t snake<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">createVector</span><span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>snake<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t \n\t x <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">constrain</span><span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size <span class=\"token operator\">-</span> pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t y <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">constrain</span><span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size <span class=\"token operator\">-</span> pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t snake<span class=\"token punctuation\">.</span><span class=\"token function\">constrain</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t \n\t s<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> snake<span class=\"token punctuation\">.</span>total<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t s<span class=\"token punctuation\">.</span><span class=\"token function\">rect</span><span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>snake<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>pix<span class=\"token punctuation\">,</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\t s<span class=\"token punctuation\">.</span><span class=\"token function\">rect</span><span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>snake<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>pix<span class=\"token punctuation\">,</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t \n\t <span class=\"token keyword\">let</span> d <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">dist</span><span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>snake<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>food<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>food<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">.</span><span class=\"token function\">eat</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t <span class=\"token function\">pickLoc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\t \n\t s<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t s<span class=\"token punctuation\">.</span><span class=\"token function\">noStroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t s<span class=\"token punctuation\">.</span><span class=\"token function\">rect</span><span class=\"token punctuation\">(</span>food<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>food<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>pix<span class=\"token punctuation\">,</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\t \n\t \n\t <span class=\"token punctuation\">}</span>\n\t \n\t s<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">keyPressed</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>keyCode <span class=\"token operator\">===</span> s<span class=\"token punctuation\">.</span><span class=\"token constant\">UP_ARROW</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t snake<span class=\"token punctuation\">.</span><span class=\"token function\">dir</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>keyCode <span class=\"token operator\">===</span> s<span class=\"token punctuation\">.</span><span class=\"token constant\">DOWN_ARROW</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t snake<span class=\"token punctuation\">.</span><span class=\"token function\">dir</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>keyCode <span class=\"token operator\">===</span> s<span class=\"token punctuation\">.</span><span class=\"token constant\">RIGHT_ARROW</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t snake<span class=\"token punctuation\">.</span><span class=\"token function\">dir</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>keyCode <span class=\"token operator\">===</span> s<span class=\"token punctuation\">.</span><span class=\"token constant\">LEFT_ARROW</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t snake<span class=\"token punctuation\">.</span><span class=\"token function\">dir</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\t \n\t <span class=\"token punctuation\">}</span>\n\t \n\t <span class=\"token punctuation\">}</span>\n\t \n\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>canvas <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">p5</span><span class=\"token punctuation\">(</span>sketch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span></code></pre></div>\n<p>But the results were that I was Equally disappointed. <a href=\"https://graphic-96d64.firebaseapp.com/snake\"> Snake Game </a> </p>","frontmatter":{"title":"Snake Game with p5js","date":"August 03, 2020","description":"Making the Snake game using the p5js on Angular"}}},"pageContext":{"slug":"/week_6/","previous":{"fields":{"slug":"/week_5/"},"frontmatter":{"title":"Marching Squares (Coding Train Inspiration)"}},"next":null}}}