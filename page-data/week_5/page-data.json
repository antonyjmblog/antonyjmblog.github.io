{"componentChunkName":"component---src-templates-blog-post-js","path":"/week_5/","result":{"data":{"site":{"siteMetadata":{"title":"Antony's Blog"}},"markdownRemark":{"id":"fee788ad-ba3d-5398-b5ba-ef32238f7bda","excerpt":"Marching Squares algorithm and Endless MAPS \nHai,Everyone üëã ,\nWhen watching Youtube, Coding Train Channel go my Eyes, the video was ‚Äù Coding in the Cabana‚Ä¶","html":"<h2>Marching Squares algorithm and Endless MAPS</h2>\n<p><code class=\"language-text\">5th week of blogging</code><br>\nHai,Everyone üëã ,<br>\nWhen watching Youtube, Coding Train Channel go my Eyes, the video was ‚Äù Coding in the Cabana, Gloria Pickle and I investigate the Marching Squares algorithm and apply it to Open Simplex Noise in Processing. ‚Äù\nI liked the video and made my mind to implement it, but the problem was that I don‚Äôt know p5js.</p>\n<blockquote>\n<p>‚Äúp5.js is a JavaScript library for creative coding, with a focus on making coding accessible and inclusive for artists, designers, educators, beginners, and anyone else! p5.js is free and open-source because we believe software, and the tools to learn it, should be accessible to everyone. ~According to <a href=\"https://p5js.org/\">https://p5js.org/</a>‚Äù</p>\n</blockquote>\n<p>Then I got an idea, why can‚Äôt we put this in angular <br>\nso I did it. <a href=\"https://graphic-96d64.firebaseapp.com\">Angular+p5js</a> <br>\nThe problem is that of communication between p5js and typescript. After so much of searching, I got a method that worked put sketch in  ngOnInit()</p>\n<div class=\"gatsby-highlight\" data-language=\"javascipt\"><pre class=\"language-javascipt\"><code class=\"language-javascipt\">const sketch = (s) =&gt; {\n\t s.preload = () =&gt; {\n\t } \n\t s.setup = () =&gt; {\n\t }\n\t s.draw = () =&gt; {\n\t }\n\t }\n\t this.canvas = new p5(sketch);\n\t}</code></pre></div>\n<p>Now let‚Äôs do the Marching Squares algorithm:<br></p>\n<div class=\"gatsby-highlight\" data-language=\"javascipt\"><pre class=\"language-javascipt\"><code class=\"language-javascipt\"> constructor() { \n\t this.getScreenSize();\n\t }\n\t \n\t @HostListener(&#39;window:resize&#39;, [&#39;$event&#39;])\n\t getScreenSize(event?) {\n\t this.screenHeight = window.innerHeight;\n\t this.screenWidth = window.innerWidth;\n\t console.log(this.screenHeight, this.screenWidth);\n\t }\n\t \n\t getRandomInt(max) {\n\t return Math.floor(Math.random() * Math.floor(max));\n\t }\n\t \n\t getState(a, b, c, d) {\n\t return a * 8 + b * 4 + c * 2 + d * 1;\n\t }\n\t \n\t ngOnInit() {\n\t let res = 30;\n\t let col,row;\n\t let weigth = res / 3.5;\n\t \n\t const sketch = (s) =&gt; {\n\t \n\t s.preload = () =&gt; {\n\t }\n\t \n\t const drawLine = (v1, v2) =&gt; {\n\t s.line(v1.x, v1.y, v2.x, v2.y);\n\t }\n\t \n\t const fill = () =&gt; {\n\t for (let i = 0; i &lt;= col; i++) {\n\t let k = [];\n\t for (let j = 0; j &lt;= row; j++) {\n\t k.push(0);\n\t }\n\t this.field.push(k);\n\t }\n\t \n\t for(let i=0;i &lt;= col;i++){\n\t for(let j=0;j &lt;= row;j++){\n\t this.field[i][j] = Math.floor(this.getRandomInt(2));\n\t }\n\t }\n\t }\n\t \n\t s.setup = () =&gt; {\n\t let p = s.createCanvas(this.screenWidth, this.screenHeight - 100);\n\t p.parent(&#39;sketch-holder&#39;);\n\t col = 1 + Math.floor(this.screenWidth / res);\n\t row = 1 + Math.floor(this.screenHeight / res);\n\t \n\t this.field = [];\n\t fill();\n\t }\n\t \n\t s.draw = () =&gt; {\n\t s.background(0, 0, 255);\n\t s.stroke(235, 143, 52);\n\t s.strokeWeight(weigth);\n\t s.fill(0, 0, 255)\n\t s.rect(0,0,this.screenWidth, this.screenHeight - 100)\n\t for(let i=0;i &lt; col;i++){\n\t for(let j=0;j&lt; row;j++){\n\t let x = i * res;\n\t let y = j * res;\n\t let a = s.createVector(x + res * 0.5, y);\n\t let b = s.createVector(x + res, y + res * 0.5);\n\t let c = s.createVector(x + res * 0.5, y + res);\n\t let d = s.createVector(x, y + res * 0.5);\n\t let state = this.getState(\n\t s.ceil(this.field[i][j]),\n\t s.ceil(this.field[i + 1][j]),\n\t s.ceil(this.field[i + 1][j + 1]),\n\t s.ceil(this.field[i][j + 1])\n\t );\n\t s.stroke(235, 143, 52);\n\t s.strokeWeight(weigth);\n\t switch (state) {\n\t case 1:\n\t drawLine(c, d);\n\t break;\n\t case 2:\n\t drawLine(b, c);\n\t break;\n\t case 3:\n\t drawLine(b, d);\n\t break;\n\t case 4:\n\t drawLine(a, b);\n\t break;\n\t case 5:\n\t drawLine(a, d);\n\t drawLine(b, c);\n\t break;\n\t case 6:\n\t drawLine(a, c);\n\t break;\n\t case 7:\n\t drawLine(a, d);\n\t break;\n\t case 8:\n\t drawLine(a, d);\n\t break;\n\t case 9:\n\t drawLine(a, c);\n\t break;\n\t case 10:\n\t drawLine(a, b);\n\t drawLine(c, d);\n\t break;\n\t case 11:\n\t drawLine(a, b);\n\t break;\n\t case 12:\n\t drawLine(b, d);\n\t break;\n\t case 13:\n\t drawLine(b, c);\n\t break;\n\t case 14:\n\t drawLine(c, d);\n\t break;\n\t }\n\t }\n\t }\n\t }//draw\n\t \n\t \n\t s.mouseDragged = () =&gt; {\n\t fill();\n\t }\n\t \n\t s.mouseReleased = () =&gt; {\n\t fill();\n\t }\n\t \n\t }\n\t  \n\t this.canvas = new p5(sketch);\n\t}</code></pre></div>\n<p>The Purpose of the Marching Squares algorithm is to generate contours.\nSteps of the algorithm:</p>\n<blockquote>\n<ol>\n<li>We divide the screen into columns and rows so that each col and row forms squares whose vertices can be white or dark in the case for implementation we use 0,1</li>\n<li>We compute the midpoints of all the edges so that, if there are 2, 0/white adjoined we can draw a line between those. Since there 16 possibilities in case of joining the midpoints for the squares.</li>\n<li>We use the Binay to decimal conversion to convert 4 digit binary represents to decimal hence we can draw the corresponding line between the midpoints.</li>\n<li>When a whole lot of squares join together, it forms contours.</li>\n</ol>\n</blockquote>\n<p>Which I used to create a MAP whenever the user clicks or drags the mouse.<a href=\"https://graphic-96d64.firebaseapp.com/canvas\"> Endless Map </a> </p>","frontmatter":{"title":"Marching Squares (Coding Train Inspiration)","date":"July 27, 2020","description":"Investigate the Marching Squares algorithm and generate endless MAPS with it."}}},"pageContext":{"slug":"/week_5/","previous":{"fields":{"slug":"/week_4/"},"frontmatter":{"title":"Deploy Machine Learning Model for simple use. Part II"}},"next":{"fields":{"slug":"/week_6/"},"frontmatter":{"title":"Snake Game with p5js"}}}}}