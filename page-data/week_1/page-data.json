{"componentChunkName":"component---src-templates-blog-post-js","path":"/week_1/","result":{"data":{"site":{"siteMetadata":{"title":"Antony's Blog"}},"markdownRemark":{"id":"a6d4a0f5-8e88-5534-9f2b-1140edd6d9ab","excerpt":"Emotion Analysis using Machine Learning Hai,Everyone ðŸ‘‹ ,\nSorry for the delay,During This time I done TCS ION internship, I would like to share with you myâ€¦","html":"<h2>Emotion Analysis using Machine Learning</h2>\n<p>Hai,Everyone ðŸ‘‹ ,<br>\nSorry for the delay,During This time I done TCS ION internship, I would like to share with you my insights from this project.The aim of this project was to identify emotions Happy, Sad, Fear, Anger, Bad, Surprise, Disgust from a collection of English text, sentences or large paragraph which also should handle scenarios where there are:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    â€¢ sarcastic meaning\n    â€¢ double negation\n    â€¢ abbreviations</code></pre></div>\n<p>The solution proposed is Machine Learning based Systems ie Text classification based on past observations.</p>\n<blockquote>\n<p>Steps involved:</p>\n</blockquote>\n<blockquote>\n<p>Data Collection: Gathering relevant datasets for Machine Learning based Systems</p>\n</blockquote>\n<blockquote>\n<p>Preprocessing: Text preprocessed to remove HTML tags, remove URLs, remove special characters, remove repetitions of letters in the same word, expand abbreviations, remove stop words for training deep learning model for classification of the text based on emotion.</p>\n</blockquote>\n<blockquote>\n<p>Feature extraction: Transforms each text into a numerical representation in the form of a vector. E.g. bag of words [a vector represents the frequency in a predefined dictionary of words ]</p>\n</blockquote>\n<blockquote>\n<p>Test-Train Split: Splitting the data into Testing and Training datasets.</p>\n</blockquote>\n<blockquote>\n<p>Training: The algorithm is fed with training data consisting of feature sets. By using training data, the algorithm can learn the different associations between pieces of text and that a particular output label is expected for a particular input.</p>\n</blockquote>\n<blockquote>\n<p>Testing: Once trained with enough training samples, the deep learning model can begin to make accurate predictions on unseen text with similar feature sets.</p>\n</blockquote>\n<p>Text Classification Algorithms used:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Machine Learning Models:\n    â€¢ SGDClassifier\n    â€¢ LogisticRegression, MultinomialNB\n    â€¢ MultinomialNB \n    â€¢ Pipeline of CountVectorizer, TfidfTransformer\nDeep Learning Models:\n    â€¢ CNN\n    â€¢ Bidirectional LSTM</code></pre></div>\n<p>Metrics and Evaluation Methods used:<br></p>\n<blockquote>\n<p>Accuracy: the percentage of texts that were predicted with the correct tag.</p>\n</blockquote>\n<blockquote>\n<p>Precision: the percentage of examples the classifier got right out of the total number of examples that are predicted for a given tag.</p>\n</blockquote>\n<blockquote>\n<p>Recall: the percentage of examples the classifier predicted for a given tag out of the total number of examples it should have predicted for that given tag.</p>\n</blockquote>\n<blockquote>\n<p>F1 Score: the harmonic mean of precision and recall.</p>\n</blockquote>\n<blockquote>\n<p>Confusion Matrix: A confusion matrix is a table that is often used to describe the performance of a classification model on a set of test data for which the true values are known. It allows the visualization of the performance of an algorithm.</p>\n</blockquote>\n<p>Solution Approach:<br>\nAs solution proposed is Machine Learning based Systems for Text classification based on past observations. Machine Learning model must be trained with the dataset since the Model doesnâ€™t understand the words it needs to be converted into a format that can be inputted to model, the steps involved in the preparation of dataset are:</p>\n<p>Data Collection and Conversion:\nAs the datasets have different formats and have different labels, It needs to be converted into the same format. For that Emotions are classified into Happy, Sad, Anger, Disgust, Surprise, Fear, Bad. the dataset from different file formats is converted into  CSV format for easy loading and the labels are set to the above mentioned. For further preprocessing, the dataset is merged into a single merged CSV file based on the relevance of the datasets.\nthe datasets used are:\n<a href=\"https://www.kaggle.com/shrivastava/isears-dataset\">https://www.kaggle.com/shrivastava/isears-dataset</a>\n<a href=\"https://data.world/crowdflower/sentiment-analysis-in-text\">https://data.world/crowdflower/sentiment-analysis-in-text</a>\n<a href=\"https://www.kaggle.com/kutayeen/emotion-datasets-twitter\">https://www.kaggle.com/kutayeen/emotion-datasets-twitter</a></p>\n<p>Preprocessing:\nWhich mainly include Text Cleaning:\n-removing URLs from the text\n-stripping HTML tags from the text which is present after the scrapping using beautiful soup\n-converted all the text into lowercase\n-emoji present into its textual format using demojize\n-removed letters that are repeated in words\n-use map to expand contractions\n-remove all the twitter handles using twitter Tokenizer\n-remove stop words using nltk\n-Apply the PorterStemmer to keep the stem of the words.\n-remove all the special characters from the text</p>\n<p>Modifying Data:\nAs for implementing both deep learning and Machine learning model data is modified in different ways:\nFor inputting into deep learning model the data must be of the form numerical array hence we use Keras tokenizer for tokenizing data, as all text must be of the same length we pad tokenized data with Keras pad<em>sequences with input</em>length as the max text length. For TensorFlow model data and label must be of the same format hence we encode the emotion labels with LabelBinarizer from sklearn, making it data that can be feed into the model.\nFor Machine learning model used the CountVectorizer for vectorizing the input and the label was not encoded.</p>\n<p>Test-Train Split:\nFor testing and training the model the data is split into test and train, here used sklearn train<em>test</em>split for splitting data into 80% train and 20% test (test<em>size=0.20,random</em>state=42).</p>\n<p>Model fitting:\nthe Machine learning Models used for classification are SGDClassifier, LogisticRegression, MultinomialNB, and a Pipeline of CountVectorizer, TfidfTransformer, MultinomialNB\nthe Deep learning models considered are Bidirectional LSTM and CNN.</p>\n<p>Evaluation metrics:\nThese metrics are the Accuracy, Precision, Recall, and F1 score, these are used to find the model performance and to select the best model possible or to\njoin two models for the best prediction.</p>\n<p>Predict:\nTo predict an arbitrary text these steps are followed:</p>\n<ol>\n<li>Inputted text is preprocessed</li>\n<li>the text is tokenized or vectorized based on the model</li>\n<li>the model predicts the output</li>\n<li>we use the inverse encoder to get the emotion of the text</li>\n</ol>","frontmatter":{"title":"Emotion Analysis using Machine Learning Part-1","date":"June 16, 2020","description":"TCS ION Internship project explanation"}}},"pageContext":{"slug":"/week_1/","previous":{"fields":{"slug":"/life/"},"frontmatter":{"title":"About life."}},"next":{"fields":{"slug":"/week_2/"},"frontmatter":{"title":"Emotion Analysis using Machine Learning Part-2"}}}}}